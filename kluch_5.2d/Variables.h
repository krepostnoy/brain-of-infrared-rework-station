struct pr {                                       //---секция профиля---//  //основные поля профиля
  byte profileSteps;                              //количество шагов профиля
  int Setpoint2;                                  //установленная температура(уставка)НИ
  byte min_pwr_BOTTOM;                            //минимальная мощность нижнего нагревателя
  byte max_pwr_BOTTOM;                            //максимальная мощность нижнего нагревателя
  byte pTarg;                                     //температура по датчику НИ, до которой работает преднагрев НИ
  byte pPwr;                                      //мощность на этапе преднагрева НИ
  byte min_pwr_TOPStep[4];                        //минимальная мощность верхнего нагревателя
  byte max_pwr_TOPStep[4];                        //максимальная мощность верхнего нагревателя
  byte rampRateStep[4];                           //скорости роста температуры по шагам
  byte temperatureStep[4];                        //заданные температуры для шагов профиля ВИ
  byte dwellTimerStep[4];                         //установленное время перехода на следующий шаг (полочка на шаге)
  byte kp1;                                       //пропорциональный коэффициент ПИД для ВИ
  byte ki1;                                       //интегральный коэффициент ПИД для ВИ
  byte kd1;                                       //дифференциальный коэффициент ПИД для ВИ
  byte kp2;                                       //пропорциональный коэффициент ПИД для НИ
  byte ki2;                                       //интегральный коэффициент ПИД для НИ
  byte kd2;                                       //дифференциальный коэффициент ПИД для НИ
};
byte SizeProfile = sizeof(pr);                    //длина поля данных
pr profile;
byte kf2 = 60;                                    //доп коэфициент для Pid2TEST2 НИ. //Значение множителя К для Сопротивления изменению t° (f = friction)
byte currentProfile = 1;                          //текущий профиль
byte editStep = 0;                                //номер шага профиля который редактируется в данный момент
byte currentStep = 1;                             //текущий шаг профиля
byte Setpoint1;                                   //установленная температура(уставка) ВИ

//---секция ПИД---//
float e1, p1, d1, e2, p2, d2;                     //ошибка регулирования, П-составляющая, Д-составляющая для ВИ и НИ соответственно
float integra, integra2;                          //интегральные составляющие ВИ и НИ
#define i_min 0.0                                 //минимум И составляющей
#define i_max 100.0                               //максимум И составляющей
double  Input1;                                   //текущая температура(измеренная max6675) ВИ
byte Output1;                                     //выход ПИД регулятора ВИ
double  Input2;                                   //текущая температура(измеренная max6675) НИ
byte Output2;                                     //выход ПИД регулятора НИ

//---секция алгоритма Брезенхема---//
int er1 = 1;                                      //переменная для расчета переполнения в алгоритме Брезенхема для ВИ
int er2 = 1;                                      //переменная для расчета переполнения в алгоритме Брезенхема для НИ
int reg1;                                         //промежуточная переменная для алгоритма Брезенхема для ВИ
int reg2;                                         //промежуточная переменная для алгоритма Брезенхема для НИ
boolean out1;                                     //выход импульса управления ВИ алгоритма Брезенхема
boolean out2;                                     //выход импульса управления НИ алгоритма Брезенхема

//---Секция флагов---//
boolean TopStart = false;                         //флаг включения ВИ
boolean flag = 0;                                 //флаг для фиксации стартовой температуры и начала работы нагревателей
byte x = 1;                                       //переменная для перехода на нужный шаг при горячей плате
boolean alarmOn = false;                          //признак предупреждения
boolean updateScreen = true;                      //признак обновления экрана

//boolean BottomPause = false;                      // полочка на уставке НИ

//---Секция переменных общего назначения---//
int startTemp;                                    //стартовая температура для профиля, когда НИ вышел на уставку, используется для определения шага профиля с которого начинаем
byte setpointRamp;                                //заданная температура по определённому шагу профиля ВИ, связана с заданной скоростью роста температуры
byte counter;                                     //счётчик для рампы и счетчик для времени нахождения в шаге
unsigned long previousMillis;                     //это для счетчиков
unsigned long nextRead1;                          //переменная для обновления текущей температуры (и складывания данных в буфер для передачи на ПК в IDLE), в режиме пайки в ней считаем ПИД
int tc1, tc2;                                     //переменная для хранения текущей температуры на датчиках ВИ и НИ соответственно
int i = 0;                                        //
int chast, kluch, Count1;                         //для вывода в порт и расчета ПИДов

//int bottom_pause;                                 // переменная для полочки на уставке НИ

typedef enum REFLOW_STATE : byte {                //---структура статусов событий---//  // ***** TYPE DEFINITIONS *****
  REFLOW_STATE_IDLE,                              //экран в режиме простоя, выбор номера профиля
  REFLOW_STATE_MENU_STEPS,                        //меню выбора числа шагов редактируемого профиля
  REFLOW_STATE_MENU_BOTTOM_TARGET,                //меню выбора уставки НИ редактируемого профиля
  REFLOW_STATE_MENU_STEP_TARGET,                  //меню выбора t° уставки ВИ на конкретном шаге редактируемого профиля
  REFLOW_STATE_MENU_STEP_RAMP,                    //меню выбора скорости роста t° ВИ на конкретном шаге редактируемого профиля
  REFLOW_STATE_MENU_STEP_DWELL,                   //меню выбора времени удержания t° уставки ВИ на конкретном шаге редактируемого профиля
  REFLOW_STATE_MENU_BOTTOM_kf2,                   //меню выбора коэффициента К Сопротивления изменению t° (f = friction) для НИ редактируемого профиля
  REFLOW_STATE_MENU_BOTTOM_pPwr,
  REFLOW_STATE_MENU_BOTTOM_pTarg,
  REFLOW_STATE_MENU_BOTTOM_P,                     //меню выбора коэффициента P для НИ редактируемого профиля
  REFLOW_STATE_MENU_BOTTOM_I,                     //меню выбора коэффициента I для НИ редактируемого профиля
  REFLOW_STATE_MENU_BOTTOM_D,                     //меню выбора коэффициента D для НИ редактируемого профиля
  REFLOW_STATE_MENU_TOP_P,                        //меню выбора коэффициента P для ВИ редактируемого профиля
  REFLOW_STATE_MENU_TOP_I,                        //меню выбора коэффициента I для ВИ редактируемого профиля
  REFLOW_STATE_MENU_TOP_D,                        //меню выбора коэффициента D для ВИ редактируемого профиля
  REFLOW_STATE_MENU_BOTTOM_PWR_MIN,               //меню выбора мин. мощности НИ редактируемого профиля
  REFLOW_STATE_MENU_BOTTOM_PWR_MAX,               //меню выбора макс. мощности НИ редактируемого профиля
  REFLOW_STATE_MENU_TOP_PWR_MIN,                  //меню выбора мин. мощности ВИ в шагах редактируемого профиля
  REFLOW_STATE_MENU_TOP_PWR_MAX,                  //меню выбора макс. мощности ВИ в шагах редактируемого профиля
  REFLOW_STATE_PRE_HEATER,                        //состояние преднагрева НИ в момент старта профиля
  //REFLOW_STATE_BOTTOM_PAUSE,                      // полочка на уставке НИ
  REFLOW_STATE_STEP_RAMP,                         //"процесс пайки", рост температуры с заданной для текущего шага ВИ скоростью
  REFLOW_STATE_STEP,                              //состояние при пайке "ШАГ ВИ"
  REFLOW_STATE_STEP_DWELL,                        //состояние при пайке ДЛИТЕЛЬНОСТЬ "ШАГА ВИ"
  REFLOW_STATE_COMPLETE,                          //состояние при пайке "ПАЙКА ЗАВЕРШЕНА"
  REFLOW_STATE_ERROR,                             //состояние при пайке "ОШИБКА"
  REFLOW_STATE_PROFILE_INIT                       //состояние в IDLE "ИНИЦИАЛИЗАЦИЯ ПРЕДУСТАНОВЛЕННОГО ПРОФИЛЯ"
}
reflowState_t;
typedef enum REFLOW_STATUS : byte  {              //структура статуса пайки, запущен или нет
  REFLOW_STATUS_OFF,                              //статус "ПАЙКА ВЫКЛЮЧЕНА"
  REFLOW_STATUS_ON                                //статус "ПАЙКА АКТИВИРОВАНА"
}
reflowStatus_t;
reflowStatus_t reflowStatus;                      //переменная статусов событий
reflowState_t reflowState;                        //переменная статуса пайки

char buf[40];                                     //расширенный буфер, если выводим больше данных
